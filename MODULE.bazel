"""
"""

module(name = "pypi")

# Dependencies
bazel_dep(name = "platforms", version = "0.0.6")
bazel_dep(name = "hermetic_cc_toolchain", version = "2.0.0")
bazel_dep(name = "python", version = "3.11.4")

toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(toolchains, "zig_sdk")

# Toolchains
register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.28",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.28",
    "@zig_sdk//toolchain:darwin_amd64",
    "@zig_sdk//toolchain:darwin_arm64",
    "@zig_sdk//toolchain:windows_amd64",
    "@zig_sdk//toolchain:windows_arm64",
)
register_toolchains("@python//:toolchain")

# Local Overrides for Dependencies
local_path_override(module_name = "python", path = "third_party/python")
local_path_override(module_name = "openssl", path = "third_party/openssl")
local_path_override(module_name = "ncurses", path = "third_party/ncurses")
local_path_override(module_name = "libedit", path = "third_party/libedit")
local_path_override(module_name = "libuuid", path = "third_party/libuuid")
local_path_override(module_name = "libffi", path = "third_party/libffi")
local_path_override(module_name = "xz", path = "third_party/xz")

single_version_override(
    module_name = "zlib",
    registry = "https://raw.githubusercontent.com/dstufft/bazel-central-registry/ccd7c0a/",
)

archive_override(
    module_name = "rules_foreign_cc",
    urls = [
        "https://github.com/bazelbuild/rules_foreign_cc/archive/6ecc134b114f6e086537f5f0148d166467042226.tar.gz",
    ],
    strip_prefix = "rules_foreign_cc-6ecc134b114f6e086537f5f0148d166467042226",
    integrity = "sha256-BZ0dHsCBmzFtBet/nw4Hxc+WNuDLsiTURRYvLQaQGR4=",
)

archive_override(
    module_name = "hermetic_cc_toolchain",
    urls = [
        "https://github.com/uber/hermetic_cc_toolchain/archive/c602db477e16f1cb10bfbd6c68013604500c4fbe.tar.gz",
    ],
    strip_prefix = "hermetic_cc_toolchain-c602db477e16f1cb10bfbd6c68013604500c4fbe",
    integrity = "sha256-g0WeBysSEkiHEdWmGkUnvTJEGwvqa/N+FDZDNPhUcoM=",
)
