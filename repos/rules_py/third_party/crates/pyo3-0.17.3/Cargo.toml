# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
name = "pyo3"
version = "0.17.3"
authors = ["PyO3 Project and Contributors <https://github.com/PyO3>"]
exclude = [
    "/.gitignore",
    ".cargo/config",
    "/codecov.yml",
    "/Makefile",
    "/pyproject.toml",
    "/noxfile.py",
]
description = "Bindings to Python interpreter"
homepage = "https://github.com/pyo3/pyo3"
documentation = "https://docs.rs/crate/pyo3/"
readme = "README.md"
keywords = [
    "pyo3",
    "python",
    "cpython",
    "ffi",
]
categories = [
    "api-bindings",
    "development-tools::ffi",
]
license = "Apache-2.0"
repository = "https://github.com/pyo3/pyo3"

[package.metadata.docs.rs]
no-default-features = true
features = [
    "macros",
    "num-bigint",
    "num-complex",
    "hashbrown",
    "serde",
    "multiple-pymethods",
    "indexmap",
    "eyre",
    "chrono",
]
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[[bench]]
name = "bench_call"
harness = false

[[bench]]
name = "bench_err"
harness = false

[[bench]]
name = "bench_dict"
harness = false

[[bench]]
name = "bench_frompyobject"
harness = false
required-features = ["macros"]

[[bench]]
name = "bench_gil"
harness = false

[[bench]]
name = "bench_list"
harness = false

[[bench]]
name = "bench_pyclass"
harness = false
required-features = ["macros"]

[[bench]]
name = "bench_pyobject"
harness = false

[[bench]]
name = "bench_set"
harness = false

[[bench]]
name = "bench_tuple"
harness = false

[[bench]]
name = "bench_intern"
harness = false

[dependencies.anyhow]
version = "1.0"
optional = true

[dependencies.cfg-if]
version = "1.0"

[dependencies.chrono]
version = "0.4"
optional = true

[dependencies.eyre]
version = ">= 0.4, < 0.7"
optional = true

[dependencies.hashbrown]
version = ">= 0.9, < 0.13"
optional = true

[dependencies.indexmap]
version = ">= 1.6, < 1.8"
optional = true

[dependencies.indoc]
version = "1.0.3"
optional = true

[dependencies.inventory]
version = "0.3.0"
optional = true

[dependencies.libc]
version = "0.2.62"

[dependencies.memoffset]
version = "0.6.5"

[dependencies.num-bigint]
version = "0.4"
optional = true

[dependencies.num-complex]
version = ">= 0.2, < 0.5"
optional = true

[dependencies.parking_lot]
version = ">= 0.11, < 0.13"

[dependencies.pyo3-ffi]
version = "=0.17.3"

[dependencies.pyo3-macros]
version = "=0.17.3"
optional = true

[dependencies.serde]
version = "1.0"
optional = true

[dependencies.unindent]
version = "0.1.4"
optional = true

[dev-dependencies.assert_approx_eq]
version = "1.1.0"

[dev-dependencies.chrono]
version = "0.4"

[dev-dependencies.criterion]
version = "0.3.5"

[dev-dependencies.proptest]
version = "0.10.1"
features = ["std"]
default-features = false

[dev-dependencies.rayon]
version = "1.0.2"

[dev-dependencies.rustversion]
version = "1.0"

[dev-dependencies.send_wrapper]
version = "0.5"

[dev-dependencies.serde]
version = "1.0"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1.0.61"

[dev-dependencies.trybuild]
version = "1.0.49"

[dev-dependencies.widestring]
version = "0.5.1"

[build-dependencies.pyo3-build-config]
version = "0.17.3"
features = ["resolve-config"]

[features]
abi3 = [
    "pyo3-build-config/abi3",
    "pyo3-ffi/abi3",
    "pyo3-macros/abi3",
]
abi3-py310 = [
    "abi3",
    "pyo3-build-config/abi3-py310",
    "pyo3-ffi/abi3-py310",
]
abi3-py37 = [
    "abi3-py38",
    "pyo3-build-config/abi3-py37",
    "pyo3-ffi/abi3-py37",
]
abi3-py38 = [
    "abi3-py39",
    "pyo3-build-config/abi3-py38",
    "pyo3-ffi/abi3-py38",
]
abi3-py39 = [
    "abi3-py310",
    "pyo3-build-config/abi3-py39",
    "pyo3-ffi/abi3-py39",
]
auto-initialize = []
default = ["macros"]
extension-module = ["pyo3-ffi/extension-module"]
full = [
    "macros",
    "pyproto",
    "chrono",
    "num-bigint",
    "num-complex",
    "hashbrown",
    "serde",
    "indexmap",
    "eyre",
    "anyhow",
]
generate-abi3-import-lib = ["generate-import-lib"]
generate-import-lib = ["pyo3-ffi/generate-import-lib"]
macros = [
    "pyo3-macros",
    "indoc",
    "unindent",
]
multiple-pymethods = [
    "inventory",
    "pyo3-macros/multiple-pymethods",
]
nightly = []
pyproto = ["pyo3-macros/pyproto"]
